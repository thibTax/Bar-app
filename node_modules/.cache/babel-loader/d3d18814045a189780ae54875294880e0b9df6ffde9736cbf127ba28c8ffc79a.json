{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thiba\\\\Desktop\\\\Bar-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport DISH from \"./models/data-local\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  //règle n°1 : un hooks doit etre appeler à la racine d'un composant\n\n  // initialisation de l'état du composant avec un tableau vide\n  const [dishes, setDishes] = useState([]);\n  useEffect(() => {\n    setDishes(DISH);\n  }, []); // le tableau vide en 2nd argument évite de déclancher le hook d'effet à chaque nouvel appel du composant\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"hey, il y a \", dishes.length, \" plat dans la bdd!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dishes.map(dish => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: dish.name\n      }, dish.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"twy18IL6yOwKsB+klFzRM/xTDww=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DISH","App","dishes","setDishes","length","map","dish","name","id"],"sources":["C:/Users/thiba/Desktop/Bar-app/src/App.tsx"],"sourcesContent":["import React, { FunctionComponent, useState, useEffect } from \"react\";\r\nimport Dish from \"./models/dish\";\r\nimport DISH from \"./models/data-local\";\r\n\r\nconst App: FunctionComponent = () => {\r\n  //règle n°1 : un hooks doit etre appeler à la racine d'un composant\r\n\r\n  // initialisation de l'état du composant avec un tableau vide\r\n  const [dishes, setDishes] = useState<Dish[]>([]);\r\n  useEffect(() => {\r\n    setDishes(DISH);\r\n  }, []); // le tableau vide en 2nd argument évite de déclancher le hook d'effet à chaque nouvel appel du composant\r\n\r\n  return (\r\n    <div>\r\n      <h1>hey, il y a {dishes.length} plat dans la bdd!</h1>\r\n      <ul>\r\n        {dishes.map((dish) => (\r\n          <li key={dish.id}>{dish.name}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAuBC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAErE,OAAOC,IAAI,MAAM,qBAAqB;AAAC;AAEvC,MAAMC,GAAsB,GAAG,MAAM;EAAA;EACnC;;EAEA;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAS,EAAE,CAAC;EAChDC,SAAS,CAAC,MAAM;IACdI,SAAS,CAACH,IAAI,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACE;IAAA,wBACE;MAAA,2BAAiBE,MAAM,CAACE,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB,eACtD;MAAA,UACGF,MAAM,CAACG,GAAG,CAAEC,IAAI,iBACf;QAAA,UAAmBA,IAAI,CAACC;MAAI,GAAnBD,IAAI,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QACjB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV,CAAC;AAAC,GAnBIP,GAAsB;AAAA,KAAtBA,GAAsB;AAqB5B,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}